<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.example.demo.Team14ApplicationTests" tests="1" skipped="0" failures="0" errors="0" timestamp="2024-03-16T17:54:53" hostname="RIMui-MacBookPro.local" time="0.267">
  <properties/>
  <testcase name="contextLoads()" classname="com.example.demo.Team14ApplicationTests" time="0.267"/>
  <system-out><![CDATA[02:54:52.510 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.example.demo.Team14ApplicationTests]: Team14ApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
02:54:52.543 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.example.demo.Team14Application for test class com.example.demo.Team14ApplicationTests

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.2.3)

2024-03-17T02:54:52.676+09:00  INFO 84605 --- [    Test worker] c.example.demo.Team14ApplicationTests    : Starting Team14ApplicationTests using Java 17.0.10 with PID 84605 (started by jenny in /Users/jenny/goormthon/2024_BEOTKKOTTHON_TEAM_14_BE)
2024-03-17T02:54:52.677+09:00  INFO 84605 --- [    Test worker] c.example.demo.Team14ApplicationTests    : No active profile set, falling back to 1 default profile: "default"
2024-03-17T02:54:52.876+09:00  INFO 84605 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-03-17T02:54:52.895+09:00  INFO 84605 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16 ms. Found 2 JPA repository interfaces.
2024-03-17T02:54:52.972+09:00  WARN 84605 --- [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-17T02:54:52.977+09:00  WARN 84605 --- [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-17T02:54:52.978+09:00  WARN 84605 --- [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-17T02:54:52.978+09:00  WARN 84605 --- [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'jdbcConnectionDetails' of type [org.springframework.boot.autoconfigure.jdbc.PropertiesJdbcConnectionDetails] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-17T02:54:52.985+09:00  WARN 84605 --- [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'dataSource' of type [com.zaxxer.hikari.HikariDataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-17T02:54:52.988+09:00  WARN 84605 --- [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'spring.jpa-org.springframework.boot.autoconfigure.orm.jpa.JpaProperties' of type [org.springframework.boot.autoconfigure.orm.jpa.JpaProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-17T02:54:52.989+09:00  WARN 84605 --- [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'spring.jpa.hibernate-org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties' of type [org.springframework.boot.autoconfigure.orm.jpa.HibernateProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-17T02:54:52.990+09:00  WARN 84605 --- [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration' of type [org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-17T02:54:52.990+09:00  WARN 84605 --- [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'hikariPoolDataSourceMetadataProvider' of type [org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration$$Lambda$895/0x000000700141c890] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-17T02:54:52.991+09:00  WARN 84605 --- [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration' of type [org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-17T02:54:52.993+09:00  WARN 84605 --- [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-17T02:54:52.994+09:00  WARN 84605 --- [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'transactionExecutionListeners' of type [org.springframework.boot.autoconfigure.transaction.ExecutionListenersTransactionManagerCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-17T02:54:52.995+09:00  WARN 84605 --- [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'spring.transaction-org.springframework.boot.autoconfigure.transaction.TransactionProperties' of type [org.springframework.boot.autoconfigure.transaction.TransactionProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-17T02:54:52.996+09:00  WARN 84605 --- [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'platformTransactionManagerCustomizers' of type [org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-17T02:54:53.001+09:00  WARN 84605 --- [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration' of type [org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-17T02:54:53.002+09:00  WARN 84605 --- [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'spring.sql.init-org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties' of type [org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-17T02:54:53.004+09:00  WARN 84605 --- [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'dataSourceScriptDatabaseInitializer' of type [org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-17T02:54:53.005+09:00  WARN 84605 --- [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration$DataSourceInitializerConfiguration' of type [org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration$DataSourceInitializerConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-17T02:54:53.006+09:00  WARN 84605 --- [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'spring.batch-org.springframework.boot.autoconfigure.batch.BatchProperties' of type [org.springframework.boot.autoconfigure.batch.BatchProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-17T02:54:53.009+09:00  INFO 84605 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2024-03-17T02:54:53.127+09:00  INFO 84605 --- [    Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4c4c7d6c
2024-03-17T02:54:53.128+09:00  INFO 84605 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2024-03-17T02:54:53.134+09:00  WARN 84605 --- [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'batchDataSourceInitializer' of type [org.springframework.boot.autoconfigure.batch.BatchDataSourceScriptDatabaseInitializer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-17T02:54:53.138+09:00  WARN 84605 --- [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'jpaVendorAdapter' of type [org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-17T02:54:53.139+09:00  WARN 84605 --- [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'entityManagerFactoryBuilder' of type [org.springframework.boot.orm.jpa.EntityManagerFactoryBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-17T02:54:53.143+09:00  WARN 84605 --- [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'persistenceManagedTypes' of type [org.springframework.orm.jpa.persistenceunit.SimplePersistenceManagedTypes] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-17T02:54:53.153+09:00  INFO 84605 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2024-03-17T02:54:53.168+09:00  INFO 84605 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.4.4.Final
2024-03-17T02:54:53.179+09:00  INFO 84605 --- [    Test worker] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2024-03-17T02:54:53.202+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3611153f
2024-03-17T02:54:53.202+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BasicTypeReference@3611153f
2024-03-17T02:54:53.202+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BasicTypeReference@3611153f
2024-03-17T02:54:53.202+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.BasicTypeReference@5835e24a
2024-03-17T02:54:53.202+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.NumericBooleanConverter -> org.hibernate.type.BasicTypeReference@5835e24a
2024-03-17T02:54:53.203+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.BasicTypeReference@5238896f
2024-03-17T02:54:53.203+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.TrueFalseConverter -> org.hibernate.type.BasicTypeReference@5238896f
2024-03-17T02:54:53.203+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.BasicTypeReference@74a85515
2024-03-17T02:54:53.203+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.YesNoConverter -> org.hibernate.type.BasicTypeReference@74a85515
2024-03-17T02:54:53.203+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@4a2e1e52
2024-03-17T02:54:53.203+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.BasicTypeReference@4a2e1e52
2024-03-17T02:54:53.203+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.BasicTypeReference@4a2e1e52
2024-03-17T02:54:53.203+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BasicTypeReference@3dfe92ef
2024-03-17T02:54:53.203+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BasicTypeReference@3dfe92ef
2024-03-17T02:54:53.203+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BasicTypeReference@3dfe92ef
2024-03-17T02:54:53.203+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary_wrapper -> org.hibernate.type.BasicTypeReference@274bae2c
2024-03-17T02:54:53.203+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.BasicTypeReference@274bae2c
2024-03-17T02:54:53.203+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.BasicTypeReference@6eeb29c0
2024-03-17T02:54:53.203+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BasicTypeReference@1d3d76b4
2024-03-17T02:54:53.203+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BasicTypeReference@1d3d76b4
2024-03-17T02:54:53.203+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.BasicTypeReference@6f986501
2024-03-17T02:54:53.204+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob_wrapper -> org.hibernate.type.BasicTypeReference@15d88c10
2024-03-17T02:54:53.204+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@22ca1242
2024-03-17T02:54:53.204+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.BasicTypeReference@22ca1242
2024-03-17T02:54:53.204+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.BasicTypeReference@22ca1242
2024-03-17T02:54:53.204+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.BasicTypeReference@54b44879
2024-03-17T02:54:53.204+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.BasicTypeReference@54b44879
2024-03-17T02:54:53.204+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.BasicTypeReference@54b44879
2024-03-17T02:54:53.204+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@78288f83
2024-03-17T02:54:53.204+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.BasicTypeReference@78288f83
2024-03-17T02:54:53.204+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.BasicTypeReference@78288f83
2024-03-17T02:54:53.204+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@29c1249a
2024-03-17T02:54:53.204+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.BasicTypeReference@29c1249a
2024-03-17T02:54:53.204+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.BasicTypeReference@29c1249a
2024-03-17T02:54:53.204+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@5beb6be2
2024-03-17T02:54:53.204+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.BasicTypeReference@5beb6be2
2024-03-17T02:54:53.204+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.BasicTypeReference@5beb6be2
2024-03-17T02:54:53.204+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BasicTypeReference@2d6a0766
2024-03-17T02:54:53.204+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BasicTypeReference@2d6a0766
2024-03-17T02:54:53.204+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BasicTypeReference@1182d1df
2024-03-17T02:54:53.205+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BasicTypeReference@1182d1df
2024-03-17T02:54:53.205+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.BasicTypeReference@31c7c281
2024-03-17T02:54:53.205+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.BasicTypeReference@31c7c281
2024-03-17T02:54:53.205+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.BasicTypeReference@31c7c281
2024-03-17T02:54:53.205+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration character_nchar -> org.hibernate.type.BasicTypeReference@31f31b20
2024-03-17T02:54:53.205+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.BasicTypeReference@4c5f7b4f
2024-03-17T02:54:53.205+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.BasicTypeReference@4c5f7b4f
2024-03-17T02:54:53.205+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.BasicTypeReference@4b544732
2024-03-17T02:54:53.205+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.BasicTypeReference@44084713
2024-03-17T02:54:53.205+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.BasicTypeReference@44084713
2024-03-17T02:54:53.205+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.BasicTypeReference@44084713
2024-03-17T02:54:53.205+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.BasicTypeReference@6d8b7ea9
2024-03-17T02:54:53.205+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.BasicTypeReference@5a39e554
2024-03-17T02:54:53.205+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.BasicTypeReference@333d44f6
2024-03-17T02:54:53.205+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.BasicTypeReference@350bbd5d
2024-03-17T02:54:53.205+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.BasicTypeReference@350bbd5d
2024-03-17T02:54:53.206+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.BasicTypeReference@3c3e363
2024-03-17T02:54:53.206+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.BasicTypeReference@3c3e363
2024-03-17T02:54:53.206+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.BasicTypeReference@16c5b50a
2024-03-17T02:54:53.206+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_char_array -> org.hibernate.type.BasicTypeReference@4f8659d0
2024-03-17T02:54:53.206+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob_character_array -> org.hibernate.type.BasicTypeReference@278fe428
2024-03-17T02:54:53.206+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.BasicTypeReference@3b4bd341
2024-03-17T02:54:53.206+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_character_array -> org.hibernate.type.BasicTypeReference@1d4cc7
2024-03-17T02:54:53.206+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob_char_array -> org.hibernate.type.BasicTypeReference@7d28cdcd
2024-03-17T02:54:53.206+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.BasicTypeReference@255ed8e4
2024-03-17T02:54:53.206+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.BasicTypeReference@255ed8e4
2024-03-17T02:54:53.206+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.BasicTypeReference@406ad6d5
2024-03-17T02:54:53.206+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.BasicTypeReference@406ad6d5
2024-03-17T02:54:53.206+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.BasicTypeReference@2a7bc16b
2024-03-17T02:54:53.206+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.BasicTypeReference@2a7bc16b
2024-03-17T02:54:53.206+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.BasicTypeReference@1186374c
2024-03-17T02:54:53.206+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.BasicTypeReference@1186374c
2024-03-17T02:54:53.206+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.BasicTypeReference@42cc5460
2024-03-17T02:54:53.206+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.BasicTypeReference@42cc5460
2024-03-17T02:54:53.206+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@5486ee92
2024-03-17T02:54:53.206+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@20820df0
2024-03-17T02:54:53.206+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.BasicTypeReference@9e62fb
2024-03-17T02:54:53.206+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.BasicTypeReference@9e62fb
2024-03-17T02:54:53.206+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeUtc -> org.hibernate.type.BasicTypeReference@205159dc
2024-03-17T02:54:53.206+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithTimezone -> org.hibernate.type.BasicTypeReference@43c0c13a
2024-03-17T02:54:53.206+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@731db93f
2024-03-17T02:54:53.206+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.BasicTypeReference@67941d
2024-03-17T02:54:53.207+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.BasicTypeReference@67941d
2024-03-17T02:54:53.207+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithTimezone -> org.hibernate.type.BasicTypeReference@2ad2b274
2024-03-17T02:54:53.207+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTimeWithoutTimezone -> org.hibernate.type.BasicTypeReference@6fde6f05
2024-03-17T02:54:53.207+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.BasicTypeReference@7114e780
2024-03-17T02:54:53.207+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.BasicTypeReference@7114e780
2024-03-17T02:54:53.207+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.BasicTypeReference@4def42c3
2024-03-17T02:54:53.207+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.BasicTypeReference@4def42c3
2024-03-17T02:54:53.207+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.BasicTypeReference@72110818
2024-03-17T02:54:53.207+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.BasicTypeReference@72110818
2024-03-17T02:54:53.207+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.BasicTypeReference@72110818
2024-03-17T02:54:53.207+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.BasicTypeReference@6eabe718
2024-03-17T02:54:53.208+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.BasicTypeReference@6eabe718
2024-03-17T02:54:53.208+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.BasicTypeReference@6eabe718
2024-03-17T02:54:53.208+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.BasicTypeReference@38d525aa
2024-03-17T02:54:53.208+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.BasicTypeReference@f9b8129
2024-03-17T02:54:53.208+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration instant -> org.hibernate.type.BasicTypeReference@7530090a
2024-03-17T02:54:53.208+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.BasicTypeReference@7530090a
2024-03-17T02:54:53.208+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid -> org.hibernate.type.BasicTypeReference@4492b393
2024-03-17T02:54:53.208+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.BasicTypeReference@4492b393
2024-03-17T02:54:53.208+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.BasicTypeReference@4492b393
2024-03-17T02:54:53.208+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.BasicTypeReference@55fb36de
2024-03-17T02:54:53.208+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.BasicTypeReference@63a7781
2024-03-17T02:54:53.208+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.BasicTypeReference@73b74615
2024-03-17T02:54:53.208+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.BasicTypeReference@73b74615
2024-03-17T02:54:53.208+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.BasicTypeReference@22686ddb
2024-03-17T02:54:53.208+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Currency -> org.hibernate.type.BasicTypeReference@22686ddb
2024-03-17T02:54:53.208+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.BasicTypeReference@22686ddb
2024-03-17T02:54:53.208+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.BasicTypeReference@2e29f28e
2024-03-17T02:54:53.208+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.BasicTypeReference@2e29f28e
2024-03-17T02:54:53.208+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.BasicTypeReference@7bfa1eb5
2024-03-17T02:54:53.208+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.io.Serializable -> org.hibernate.type.BasicTypeReference@7bfa1eb5
2024-03-17T02:54:53.208+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.BasicTypeReference@32b46831
2024-03-17T02:54:53.208+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.BasicTypeReference@32b46831
2024-03-17T02:54:53.208+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZoneOffset -> org.hibernate.type.BasicTypeReference@5353dd09
2024-03-17T02:54:53.208+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZoneOffset -> org.hibernate.type.BasicTypeReference@5353dd09
2024-03-17T02:54:53.208+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.BasicTypeReference@320ff86f
2024-03-17T02:54:53.208+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.BasicTypeReference@320ff86f
2024-03-17T02:54:53.208+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration vector -> org.hibernate.type.BasicTypeReference@192b472d
2024-03-17T02:54:53.208+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.BasicTypeReference@84f51d9
2024-03-17T02:54:53.210+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.JavaObjectType@33e50ff2
2024-03-17T02:54:53.210+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.JavaObjectType@33e50ff2
2024-03-17T02:54:53.211+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@4b85edeb
2024-03-17T02:54:53.211+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.BasicTypeReference@5731caaf
2024-03-17T02:54:53.211+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.BasicTypeReference@59933644
2024-03-17T02:54:53.211+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.BasicTypeReference@67e6eb52
2024-03-17T02:54:53.211+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.BasicTypeReference@3e8b8f0
2024-03-17T02:54:53.211+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.BasicTypeReference@5ad57e90
2024-03-17T02:54:53.211+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_time -> org.hibernate.type.BasicTypeReference@1a345298
2024-03-17T02:54:53.211+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.BasicTypeReference@4ad896f7
2024-03-17T02:54:53.211+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.BasicTypeReference@c318864
2024-03-17T02:54:53.277+09:00  INFO 84605 --- [    Test worker] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2024-03-17T02:54:53.319+09:00 DEBUG 84605 --- [    Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(12, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@2acb1264) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@30a01dd8)
2024-03-17T02:54:53.319+09:00 DEBUG 84605 --- [    Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-9, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@1f68e4e8) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@47b4ac83)
2024-03-17T02:54:53.319+09:00 DEBUG 84605 --- [    Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(-3, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@351ede23) replaced previous registration(org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@5604b85)
2024-03-17T02:54:53.319+09:00 DEBUG 84605 --- [    Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4003, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5df7a065) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@3f45dfec)
2024-03-17T02:54:53.319+09:00 DEBUG 84605 --- [    Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4001, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7c69e1e1) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@7b52b18a)
2024-03-17T02:54:53.319+09:00 DEBUG 84605 --- [    Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(4002, org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1bc6c20d) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@aedc426)
2024-03-17T02:54:53.319+09:00 DEBUG 84605 --- [    Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2004, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@39b85a73) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@5788722f)
2024-03-17T02:54:53.319+09:00 DEBUG 84605 --- [    Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2005, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@7a730479) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@1e5b33e5)
2024-03-17T02:54:53.319+09:00 DEBUG 84605 --- [    Test worker] o.h.t.d.sql.spi.DdlTypeRegistry          : addDescriptor(2011, org.hibernate.type.descriptor.sql.internal.CapacityDependentDdlType@654b899f) replaced previous registration(org.hibernate.type.descriptor.sql.internal.DdlTypeImpl@71468613)
2024-03-17T02:54:53.320+09:00 DEBUG 84605 --- [    Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NCharTypeDescriptor) replaced previous registration(CharTypeDescriptor)
2024-03-17T02:54:53.320+09:00 DEBUG 84605 --- [    Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NVarcharTypeDescriptor) replaced previous registration(VarcharTypeDescriptor)
2024-03-17T02:54:53.320+09:00 DEBUG 84605 --- [    Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(LongNVarcharTypeDescriptor) replaced previous registration(LongVarcharTypeDescriptor)
2024-03-17T02:54:53.321+09:00 DEBUG 84605 --- [    Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(NClobTypeDescriptor(DEFAULT)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-03-17T02:54:53.321+09:00 DEBUG 84605 --- [    Test worker] o.h.t.d.jdbc.spi.JdbcTypeRegistry        : addDescriptor(2005, ClobTypeDescriptor(STREAM_BINDING)) replaced previous registration(ClobTypeDescriptor(DEFAULT))
2024-03-17T02:54:53.322+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration null -> org.hibernate.type.NullType@79295932
2024-03-17T02:54:53.322+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Type registration key [null] overrode previous entry : `org.hibernate.type.NullType@4b85edeb`
2024-03-17T02:54:53.324+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.DurationType -> basicType@1(java.time.Duration,3015)
2024-03-17T02:54:53.324+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> basicType@1(java.time.Duration,3015)
2024-03-17T02:54:53.324+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> basicType@1(java.time.Duration,3015)
2024-03-17T02:54:53.325+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetDateTimeType -> basicType@2(java.time.OffsetDateTime,3003)
2024-03-17T02:54:53.325+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-03-17T02:54:53.325+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> basicType@2(java.time.OffsetDateTime,3003)
2024-03-17T02:54:53.325+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.ZonedDateTimeType -> basicType@3(java.time.ZonedDateTime,3003)
2024-03-17T02:54:53.325+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-03-17T02:54:53.325+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> basicType@3(java.time.ZonedDateTime,3003)
2024-03-17T02:54:53.325+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration org.hibernate.type.OffsetTimeType -> basicType@4(java.time.OffsetTime,3007)
2024-03-17T02:54:53.325+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-03-17T02:54:53.325+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> basicType@4(java.time.OffsetTime,3007)
2024-03-17T02:54:53.326+09:00 DEBUG 84605 --- [    Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5855b0ed] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@92fd091]
2024-03-17T02:54:53.398+09:00  WARN 84605 --- [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.data.jpa.domain.support.AuditingEntityListener' of type [org.springframework.data.jpa.domain.support.AuditingEntityListener] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-17T02:54:53.588+09:00  INFO 84605 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-03-17T02:54:53.588+09:00 DEBUG 84605 --- [    Test worker] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5855b0ed] to SessionFactoryImplementor [org.hibernate.internal.SessionFactoryImpl@4113d9ab]
2024-03-17T02:54:53.592+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.SQL                        : drop table if exists note
Hibernate: drop table if exists note
2024-03-17T02:54:53.600+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.SQL                        : drop table if exists user
Hibernate: drop table if exists user
2024-03-17T02:54:53.603+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.SQL                        : create table note (created_at datetime(6) not null, id bigint not null auto_increment, updated_at datetime(6) not null, content varchar(255) not null, name varchar(255) not null, password varchar(255) not null, primary key (id)) engine=InnoDB
Hibernate: create table note (created_at datetime(6) not null, id bigint not null auto_increment, updated_at datetime(6) not null, content varchar(255) not null, name varchar(255) not null, password varchar(255) not null, primary key (id)) engine=InnoDB
2024-03-17T02:54:53.612+09:00 DEBUG 84605 --- [    Test worker] org.hibernate.SQL                        : create table user (created_at datetime(6) not null, id bigint not null auto_increment, updated_at datetime(6) not null, social_email varchar(255) not null, user_name varchar(255) not null, social_type enum ('KAKAO') not null, primary key (id)) engine=InnoDB
Hibernate: create table user (created_at datetime(6) not null, id bigint not null auto_increment, updated_at datetime(6) not null, social_email varchar(255) not null, user_name varchar(255) not null, social_type enum ('KAKAO') not null, primary key (id)) engine=InnoDB
2024-03-17T02:54:53.623+09:00 TRACE 84605 --- [    Test worker] o.h.type.spi.TypeConfiguration$Scope     : Handling #sessionFactoryCreated from [org.hibernate.internal.SessionFactoryImpl@4113d9ab] for TypeConfiguration
2024-03-17T02:54:53.623+09:00  INFO 84605 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-03-17T02:54:53.624+09:00  WARN 84605 --- [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'entityManagerFactory' of type [org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-17T02:54:53.624+09:00  WARN 84605 --- [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'entityManagerFactory' of type [jdk.proxy3.$Proxy120] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-17T02:54:53.625+09:00  WARN 84605 --- [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'transactionManager' of type [org.springframework.orm.jpa.JpaTransactionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [jobRegistryBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.
2024-03-17T02:54:53.628+09:00  WARN 84605 --- [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration$SpringBootBatchConfiguration' of type [org.springframework.boot.autoconfigure.batch.BatchAutoConfiguration$SpringBootBatchConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [jobRegistryBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.
2024-03-17T02:54:53.931+09:00  INFO 84605 --- [    Test worker] c.example.demo.Team14ApplicationTests    : Started Team14ApplicationTests in 1.342 seconds (process running for 1.703)
2024-03-17T02:54:53.932+09:00  INFO 84605 --- [    Test worker] o.s.b.a.b.JobLauncherApplicationRunner   : Running default command line with: []
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
